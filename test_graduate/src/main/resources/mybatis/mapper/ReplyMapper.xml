<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qhg.dao.ReplyMapper" >
  <resultMap id="BaseResultMap" type="com.qhg.model.Reply" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="reply_name" property="replyName" jdbcType="VARCHAR" />
    <result column="replier_id" property="replierId" jdbcType="VARCHAR" />
    <result column="reply_context" property="replyContext" jdbcType="VARCHAR" />
    <result column="reply_time" property="replyTime" jdbcType="VARCHAR" />
    <result column="problem_id" property="problemId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, reply_name, replier_id, reply_context, reply_time, problem_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qhg.model.ReplyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from reply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from reply
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from reply
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qhg.model.ReplyExample" >
    delete from reply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qhg.model.Reply" >
    insert into reply (id, reply_name, replier_id, 
      reply_context, reply_time, problem_id
      )
    values (#{id,jdbcType=VARCHAR}, #{replyName,jdbcType=VARCHAR}, #{replierId,jdbcType=VARCHAR}, 
      #{replyContext,jdbcType=VARCHAR}, #{replyTime,jdbcType=VARCHAR}, #{problemId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qhg.model.Reply" >
    insert into reply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="replyName != null" >
        reply_name,
      </if>
      <if test="replierId != null" >
        replier_id,
      </if>
      <if test="replyContext != null" >
        reply_context,
      </if>
      <if test="replyTime != null" >
        reply_time,
      </if>
      <if test="problemId != null" >
        problem_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="replyName != null" >
        #{replyName,jdbcType=VARCHAR},
      </if>
      <if test="replierId != null" >
        #{replierId,jdbcType=VARCHAR},
      </if>
      <if test="replyContext != null" >
        #{replyContext,jdbcType=VARCHAR},
      </if>
      <if test="replyTime != null" >
        #{replyTime,jdbcType=VARCHAR},
      </if>
      <if test="problemId != null" >
        #{problemId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qhg.model.ReplyExample" resultType="java.lang.Integer" >
    select count(*) from reply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update reply
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.replyName != null" >
        reply_name = #{record.replyName,jdbcType=VARCHAR},
      </if>
      <if test="record.replierId != null" >
        replier_id = #{record.replierId,jdbcType=VARCHAR},
      </if>
      <if test="record.replyContext != null" >
        reply_context = #{record.replyContext,jdbcType=VARCHAR},
      </if>
      <if test="record.replyTime != null" >
        reply_time = #{record.replyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.problemId != null" >
        problem_id = #{record.problemId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update reply
    set id = #{record.id,jdbcType=VARCHAR},
      reply_name = #{record.replyName,jdbcType=VARCHAR},
      replier_id = #{record.replierId,jdbcType=VARCHAR},
      reply_context = #{record.replyContext,jdbcType=VARCHAR},
      reply_time = #{record.replyTime,jdbcType=VARCHAR},
      problem_id = #{record.problemId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qhg.model.Reply" >
    update reply
    <set >
      <if test="replyName != null" >
        reply_name = #{replyName,jdbcType=VARCHAR},
      </if>
      <if test="replierId != null" >
        replier_id = #{replierId,jdbcType=VARCHAR},
      </if>
      <if test="replyContext != null" >
        reply_context = #{replyContext,jdbcType=VARCHAR},
      </if>
      <if test="replyTime != null" >
        reply_time = #{replyTime,jdbcType=VARCHAR},
      </if>
      <if test="problemId != null" >
        problem_id = #{problemId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qhg.model.Reply" >
    update reply
    set reply_name = #{replyName,jdbcType=VARCHAR},
      replier_id = #{replierId,jdbcType=VARCHAR},
      reply_context = #{replyContext,jdbcType=VARCHAR},
      reply_time = #{replyTime,jdbcType=VARCHAR},
      problem_id = #{problemId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>