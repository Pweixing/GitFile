<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qhg.dao.ProblemMapper" >
  <resultMap id="BaseResultMap" type="com.qhg.model.Problem" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="promulgatorId" property="promulgatorid" jdbcType="VARCHAR" />
    <result column="problem_context" property="problemContext" jdbcType="VARCHAR" />
    <result column="look_num" property="lookNum" jdbcType="INTEGER" />
    <result column="reply_num" property="replyNum" jdbcType="INTEGER" />
    <result column="creat_time" property="creatTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, promulgatorId, problem_context, look_num, reply_num, creat_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qhg.model.ProblemExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from problem
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from problem
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from problem
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qhg.model.ProblemExample" >
    delete from problem
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qhg.model.Problem" >
    insert into problem (id, promulgatorId, problem_context, 
      look_num, reply_num, creat_time
      )
    values (#{id,jdbcType=VARCHAR}, #{promulgatorid,jdbcType=VARCHAR}, #{problemContext,jdbcType=VARCHAR}, 
      #{lookNum,jdbcType=INTEGER}, #{replyNum,jdbcType=INTEGER}, #{creatTime,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qhg.model.Problem" >
    insert into problem
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="promulgatorid != null" >
        promulgatorId,
      </if>
      <if test="problemContext != null" >
        problem_context,
      </if>
      <if test="lookNum != null" >
        look_num,
      </if>
      <if test="replyNum != null" >
        reply_num,
      </if>
      <if test="creatTime != null" >
        creat_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="promulgatorid != null" >
        #{promulgatorid,jdbcType=VARCHAR},
      </if>
      <if test="problemContext != null" >
        #{problemContext,jdbcType=VARCHAR},
      </if>
      <if test="lookNum != null" >
        #{lookNum,jdbcType=INTEGER},
      </if>
      <if test="replyNum != null" >
        #{replyNum,jdbcType=INTEGER},
      </if>
      <if test="creatTime != null" >
        #{creatTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qhg.model.ProblemExample" resultType="java.lang.Integer" >
    select count(*) from problem
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update problem
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.promulgatorid != null" >
        promulgatorId = #{record.promulgatorid,jdbcType=VARCHAR},
      </if>
      <if test="record.problemContext != null" >
        problem_context = #{record.problemContext,jdbcType=VARCHAR},
      </if>
      <if test="record.lookNum != null" >
        look_num = #{record.lookNum,jdbcType=INTEGER},
      </if>
      <if test="record.replyNum != null" >
        reply_num = #{record.replyNum,jdbcType=INTEGER},
      </if>
      <if test="record.creatTime != null" >
        creat_time = #{record.creatTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update problem
    set id = #{record.id,jdbcType=VARCHAR},
      promulgatorId = #{record.promulgatorid,jdbcType=VARCHAR},
      problem_context = #{record.problemContext,jdbcType=VARCHAR},
      look_num = #{record.lookNum,jdbcType=INTEGER},
      reply_num = #{record.replyNum,jdbcType=INTEGER},
      creat_time = #{record.creatTime,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qhg.model.Problem" >
    update problem
    <set >
      <if test="promulgatorid != null" >
        promulgatorId = #{promulgatorid,jdbcType=VARCHAR},
      </if>
      <if test="problemContext != null" >
        problem_context = #{problemContext,jdbcType=VARCHAR},
      </if>
      <if test="lookNum != null" >
        look_num = #{lookNum,jdbcType=INTEGER},
      </if>
      <if test="replyNum != null" >
        reply_num = #{replyNum,jdbcType=INTEGER},
      </if>
      <if test="creatTime != null" >
        creat_time = #{creatTime,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qhg.model.Problem" >
    update problem
    set promulgatorId = #{promulgatorid,jdbcType=VARCHAR},
      problem_context = #{problemContext,jdbcType=VARCHAR},
      look_num = #{lookNum,jdbcType=INTEGER},
      reply_num = #{replyNum,jdbcType=INTEGER},
      creat_time = #{creatTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="allProblem" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from problem
  </select>
</mapper>